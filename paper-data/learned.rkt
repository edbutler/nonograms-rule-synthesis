(lst ((lst ((str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 2))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str True ()))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str BindingValue ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 5873))) (str Const ((lit -4424))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 1))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BoundValue ()) (str BindingValue ((lit 2))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Const ((lit -209))) (str Const ((lit -4553))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit -2187))) (str Const ((lit -2188))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 2))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BoundValue ()))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 1))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1295))) (str Const ((lit 1294))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BoundValue ()))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit -4126))) (str Const ((lit -4127))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BoundValue ()))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BoundValue ()))))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Const ((lit 1))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit -7575))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str True ()))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit -9791))) (str Const ((lit -9792))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 2))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BoundValue ()) (str Const ((lit 1))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 3))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 3))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 2))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))))) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingIndex ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 2))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 2))))))) (str BoundValue ()))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingIndex ((lit 2))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 5) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 2409))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 5) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 6412))) (str Const ((lit 6359))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BoundValue ()) (str Const ((lit 1))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit 4310))) (str Const ((lit 4309))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 2))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str And ((str True ()) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit hint) (lit 3))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit hint) (lit 3))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 3))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 3))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -6909))) (str Const ((lit -10644))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 2))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BoundValue ()))))) (str Const ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Const ((lit -1))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingIndex ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str True ()))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Ident ((lit N))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str True ()))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str BindingValue ((lit 0))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Const ((lit -1))))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str True ()))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BoundValue ()))))) (str Const ((lit -1))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 2))))) (str And ((str Min? ((lit 0))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str And ((str Max? ((lit 1))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str BindingIndex ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit 1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 3))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 12381))) (str Const ((lit 7592))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit hint) (lit 3))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit hint) (lit 3))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Const ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 0))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit 0))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str BindingValue ((lit 2))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 5))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Const ((lit 0))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 5))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 5))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 5))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 5))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 2))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 1))))))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 3))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 1))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 5) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Ident ((lit N))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit 5018))) (str Const ((lit -4825))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit 1))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 5))) (lst ((lit #f) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))) (str Ident ((lit N))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Ident ((lit N))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Ident ((lit N))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 2))))) (str HighestStartCell ((str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 2))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Ident ((lit N))))))) (str Const ((lit -1))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit 1))))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str True ()))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str BindingIndex ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str True ()))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str True ()))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 4))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str True ()) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 2))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 2))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 1))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit #t) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str True ()))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str True ()))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 1))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 2))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 3))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 3))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit #t) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Const ((lit -8519))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit #t) (lit #f) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str BindingValue ((lit 2))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 2))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 6))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 1))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str True ()) (str And ((str True ()) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))) (str BoundValue ()))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit e) (lit #f) (lit #t) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 2))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit e) (lit #f) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 2))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str True ()))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Ident ((lit N))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 2))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 2))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #t) (lit e) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 2) (str True ()))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit #f) (lit #t) (lit #f) (lit e) (lit #f) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 5) (lit 6))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit #t) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 2))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 4) (lit 5))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Const ((lit -1))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 2))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit #f) (lit #f) (lit e) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Const ((lit 0))))))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 6) (lit 7))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Ident ((lit N))))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 2))) (lst ((lit #t) (lit e) (lit e) (lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit #t) (lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str True ()) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BoundValue ()) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str True ()) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Ident ((lit N))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str True ()) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str True ()) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 2))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 2))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str True ()))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))) (str Ident ((lit N))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Ident ((lit N))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str True ()))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Ident ((lit N))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Ident ((lit N))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str True ()) (str True ()))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str True ()) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Ident ((lit N))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Ident ((lit N))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Ident ((lit N))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str True ()))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Ident ((lit N))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Ident ((lit N))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str Ident ((lit N))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str True ()))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit -3929))) (str Const ((lit -3929))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Const ((lit -347))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 7263))) (str Const ((lit -3076))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 2762))) (str Const ((lit -568))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Const ((lit 9529))) (str Const ((lit -469))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit -6917))) (str Const ((lit -6918))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 2762))) (str Const ((lit -568))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 2762))) (str Const ((lit -568))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BoundValue ()) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 1))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Constant ((lit block) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 2))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 2))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 2))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str BindingValue ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 2))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 2))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 1))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Unique? ((lit 2) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))) (str BindingValue ((lit 2))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Max? ((lit 1))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Max? ((lit 1))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 1))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 2))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 2))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 2))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit -1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str BindingIndex ((lit 2))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 2))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 1))))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 2))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Unique? ((lit 2) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str HighestStartCell ((str BindingIndex ((lit 1))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 1))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit -5742))) (str Const ((lit -5743))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 2))) (str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))) (str Singleton ((lit block))))) (str And ((str Min? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 2))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 2))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 2))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f))))) (lst ((lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e))))) (lst ((lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit generalization-start) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BoundValue ()) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str And ((str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e))))) (lst ((lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t))))) (lst ((lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 1))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #t) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 4))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BoundValue ()))))))))))) (str Fill ((lit #f) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit hint))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit hint))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str HighestStartCell ((str BindingIndex ((lit 1))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit hint) (lit 1))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 2) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str BoundValue ()) (str BoundValue ()))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 2))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 1))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #t) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >=) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit #f))))) (lst ((lit #t) (lit #f) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit #t))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #f) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit e) (lit e))))) (lst ((lit #t) (lit #f) (lit e) (lit e))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit >=) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #t) (lit e) (lit #f) (lit e))))) (lst ((lit #t) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #t) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit #f))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #f))))) (lst ((lit e) (lit #t) (lit e) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 3))) (lst ((lit e) (lit e) (lit e) (lit e))))) (lst ((lit e) (lit #t) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 0))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit e) (lit #f) (lit #f))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 1) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Const ((lit 1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit e) (lit #f) (lit e))))) (lst ((lit e) (lit e) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Const ((lit -1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str Const ((lit 1))))))) (str Const ((lit -1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Const ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #f) (lit 0) (lit 1))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit gap))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit -1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str BindingValue ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit -) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit -) (lst ((str Const ((lit -1))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))) (str Const ((lit -1))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit e) (lit #f))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 2))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit #f) (lit #f) (lit #f) (lit e))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #t) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Apply ((lit +) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Const ((lit -1))))))))))) (str And ((str Apply ((lit >) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #t) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit #t) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #f))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 3) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit block) (lit 0))))) (str And ((str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str Const ((lit 0))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str Unique? ((lit 0) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1))) (lst ((lit e) (lit e) (lit e) (lit #t))))) (lst ((lit #f) (lit #f) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 0) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str Unique? ((lit 0) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str BindingIndex ((lit 1))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str BindingIndex ((lit 1))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit cost-start) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str And ((str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Const ((lit -1))) (str Const ((lit -9567))))))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit >) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit block) (lit 0))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str LowestEndCell ((str BindingIndex ((lit 0))))) (str BindingIndex ((lit 1))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))) (str Apply ((lit =) (lst ((str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str Const ((lit 0))) (str Const ((lit -1))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Singleton ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str Apply ((lit =) (lst ((str Const ((lit 0))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 1))))))))))))))) (str Fill ((lit #f) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Constant ((lit block) (lit 0))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))) (str Apply ((lit >=) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))))) (str Fill ((lit #f) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))) (str Const ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 1))) (str Arbitrary ((lit block))))) (str And ((str Max? ((lit 0))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str Const ((lit -1))))))) (str Const ((lit 0))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str BindingValue ((lit 0))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 1) (lit 1))) (lst ((lit e) (lit #t) (lit e) (lit e))))) (lst ((lit #f) (lit #t) (lit #f) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str fill-action ((lit #f) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit block))))) (str And ((str Apply ((lit =) (lst ((str Apply ((lit -) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str LowestEndCell ((str BindingIndex ((lit 0))))))))))))) (str Apply ((lit >=) (lst ((str Const ((lit 1))) (str Apply ((lit -) (lst ((str BindingIndex ((lit 1))) (str Const ((lit 0))))))))))))) (str Fill ((lit #f) (str BindingIndex ((lit 1))) (str Const ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit 1))) (str Const ((lit 1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit =) (lst ((str HighestStartCell ((str BindingIndex ((lit 0))))) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str Apply ((lit -) (lst ((str Const ((lit 1))) (str Const ((lit -1))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str BindingValue ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str Const ((lit 1))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit 0))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 1))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit -) (lst ((str BoundValue ()) (str Const ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str And ((str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str Const ((lit 0))) (str BindingValue ((lit 0))))))) (str HighestStartCell ((str BindingIndex ((lit 0))))))))) (str Apply ((lit =) (lst ((str Apply ((lit +) (lst ((str Const ((lit 1))) (str BindingValue ((lit 1))))))) (str BindingValue ((lit 0))))))))) (str Fill ((lit #t) (str Const ((lit 0))) (str BindingValue ((lit 0))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BoundValue ()) (str BindingValue ((lit 0))))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Singleton ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit -) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 1))))))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BoundValue ()))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Constant ((lit hint) (lit 0))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str BindingValue ((lit 0))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str Const ((lit -1))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit e) (lit #f) (lit e) (lit e))))) (lst ((lit #f) (lit #f) (lit #t) (lit #t))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 4))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >=) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BoundValue ()))))) (str Apply ((lit +) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 1))))))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Const ((lit 0))) (str BindingValue ((lit 1))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Arbitrary ((lit gap))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit -) (lst ((str BindingValue ((lit 1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Singleton ((lit gap))))) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))) (str Fill ((lit #t) (str BindingIndex ((lit 1))) (str Apply ((lit +) (lst ((str Const ((lit -1))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 0))))))))) (str work-result ((lit final) (str work-item ((str line-transition ((str line ((lst ((lit 2))) (lst ((lit #f) (lit e) (lit e) (lit e))))) (lst ((lit #f) (lit e) (lit #t) (lit e))))) (lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str fill-action ((lit #t) (lit 2) (lit 3))))) (str Program ((lst ((str Arbitrary ((lit hint))) (str Constant ((lit gap) (lit 0))))) (str Unique? ((lit 1) (str Apply ((lit >) (lst ((str Apply ((lit +) (lst ((str BindingValue ((lit 0))) (str BindingValue ((lit 0))))))) (str BindingValue ((lit 1))))))))) (str Fill ((lit #t) (str Apply ((lit +) (lst ((str BindingIndex ((lit 1))) (str BindingValue ((lit 0))))))) (str Const ((lit -1))) (str Const ((lit 0)))))))))))))